CREATE TABLE "clinic"
(
    "id"                 UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "name"               VARCHAR(255)     NOT NULL UNIQUE,
    "email"              VARCHAR(255)     NOT NULL,
    "owner_name"         VARCHAR(255)     NOT NULL,
    "owner_phone_number" VARCHAR(255)     NOT NULL,
    "is_active"          BOOLEAN          NOT NULL DEFAULT TRUE
);

CREATE TABLE "location"
(
    "id"                            UUID PRIMARY KEY    NOT NULL DEFAULT gen_random_uuid(),
    "clinic_id"                     UUID                NOT NULL,
    "name"                          VARCHAR(255) UNIQUE NOT NULL,
    "email"                         VARCHAR(255)        NOT NULL,
    "city"                          VARCHAR(255)        NOT NULL,
    "address"                       VARCHAR(255)        NOT NULL,
    "phone_number"                  VARCHAR(255)        NOT NULL,
    "location_restrictions_enabled" BOOLEAN             NOT NULL DEFAULT FALSE,
    "latitude"                      DOUBLE PRECISION,
    "longitude"                     DOUBLE PRECISION,
    "is_active"                     BOOLEAN             NOT NULL DEFAULT TRUE
);

CREATE TABLE "employee"
(
    "id"           UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "email"        VARCHAR(255)     NOT NULL UNIQUE,
    "password"     VARCHAR(255)     NOT NULL,
    "phone_number" VARCHAR(255)     NOT NULL,
    "name"         VARCHAR(255)     NOT NULL,
    "job_title"    VARCHAR(255)     NOT NULL,
    "is_active"    BOOLEAN          NOT NULL DEFAULT TRUE
);

CREATE TABLE "role"
(
    "id"          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "name"        VARCHAR(255) UNIQUE                                 NOT NULL,
    "description" VARCHAR(255)
);

CREATE TABLE "owner"
(
    "id"           UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "name"         VARCHAR(255)     NOT NULL,
    "email"        VARCHAR(255)     NOT NULL UNIQUE,
    "phone_number" VARCHAR(255)     NOT NULL,
    "home_address" VARCHAR(255),
    "bulstat"      VARCHAR(255),
    "notes"        TEXT,
    "is_active"    BOOLEAN          NOT NULL DEFAULT TRUE
);

CREATE TABLE "patient"
(
    "id"          UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "name"        VARCHAR(255)     NOT NULL,
    "pet_type"    VARCHAR(255)     NOT NULL,
    "microchip"   VARCHAR(255) UNIQUE,
    "birthdate"   DATE             NOT NULL,
    "weight"      DECIMAL(5, 2) CHECK (weight >= 0),
    "is_deceased" BOOLEAN          NOT NULL DEFAULT FALSE,
    "is_neutered" BOOLEAN          NOT NULL DEFAULT FALSE,
    "note"        TEXT
);

CREATE TABLE "vaccination"
(
    "id"          UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "name"        VARCHAR(255)     NOT NULL,
    "start_date"  DATE             NOT NULL,
    "due_date"    DATE             NOT NULL,
    "patient_id"  UUID             NOT NULL,
    "location_id" UUID             NOT NULL,
    "employee_id" UUID             NOT NULL
);

CREATE TABLE "discount"
(
    "id"                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "name"               VARCHAR(255)                                        NOT NULL,
    "percent_items"      DECIMAL(5, 2) CHECK (percent_items >= 0),
    "percent_procedures" DECIMAL(5, 2) CHECK (percent_procedures >= 0),
    "location_id"        UUID                                                NOT NULL,
    "is_active"          BOOLEAN                                             NOT NULL DEFAULT TRUE
);

CREATE TABLE "note"
(
    "id"          UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "message"     TEXT,
    "date_added"  DATE             NOT NULL,
    "patient_id"  UUID             NOT NULL,
    "location_id" UUID             NOT NULL,
    "employee_id" UUID             NOT NULL,
    "is_public"   BOOLEAN          NOT NULL DEFAULT TRUE

);

CREATE TABLE "bill"
(
    "id"               UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "amount"           DECIMAL(9, 2) CHECK (amount >= 0),
    "amount_after_tax" DECIMAL(9, 2) CHECK (amount_after_tax >= 0),
    "paid_amount"      DECIMAL(9, 2)    NOT NULL,
    "remaining_amount" DECIMAL(9, 2)    NOT NULL,
    "has_invoice"      BOOLEAN          NOT NULL DEFAULT FALSE,
    "note"             TEXT,
    "patient_id"       UUID             NOT NULL,
    "location_id"      UUID             NOT NULL
);

CREATE TABLE "item"
(
    "id"                 UUID PRIMARY KEY NOT NULL                   DEFAULT gen_random_uuid(),
    "name"               VARCHAR(255)     NOT NULL,
    "description"        VARCHAR(255),
    "available_quantity" BIGINT           NOT NULL                   DEFAULT 0,
    "price"              DECIMAL(9, 2) CHECK (price >= 0),
    "tax_rate_percent"   DECIMAL(5, 2) CHECK (tax_rate_percent >= 0) DEFAULT 20.00,
    "date_added"         DATE             NOT NULL,
    "date_updated"       DATE             NOT NULL,
    "is_active"          BOOLEAN          NOT NULL                   DEFAULT TRUE,
    "location_id"        UUID             NOT NULL
);

CREATE TABLE "procedure"
(
    "id"               UUID PRIMARY KEY NOT NULL                   DEFAULT gen_random_uuid(),
    "name"             VARCHAR(255)     NOT NULL,
    "description"      VARCHAR(255),
    "price"            DECIMAL(9, 2) CHECK (price >= 0),
    "tax_rate_percent" DECIMAL(5, 2) CHECK (tax_rate_percent >= 0) DEFAULT 20.00,
    "date_added"       DATE             NOT NULL,
    "date_updated"     DATE             NOT NULL,
    "is_active"        BOOLEAN          NOT NULL                   DEFAULT TRUE,
    "location_id"      UUID             NOT NULL
);

CREATE TABLE "billed_item"
(
    "id"               UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "name"             VARCHAR(255)     NOT NULL,
    "description"      VARCHAR(255),
    "billed_price"     DECIMAL(9, 2)    NOT NULL,
    "tax_rate_percent" DECIMAL(5, 2)    NOT NULL,
    "quantity"         BIGINT           NOT NULL DEFAULT 1,
    "billed_date"      DATE             NOT NULL,
    "bill_id"          UUID             NOT NULL,
    "employee_id"      UUID             NOT NULL,
    "location_id"      UUID             NOT NULL,
    "discount_id"      BIGINT
);

CREATE TABLE "billed_procedure"
(
    "id"               UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "name"             VARCHAR(255)     NOT NULL,
    "description"      VARCHAR(255),
    "message"          TEXT,
    "billed_price"     DECIMAL(9, 2)    NOT NULL,
    "tax_rate_percent" DECIMAL(5, 2)    NOT NULL,
    "billed_date"      DATE             NOT NULL,
    "bill_id"          UUID             NOT NULL,
    "employee_id"      UUID             NOT NULL,
    "location_id"      UUID             NOT NULL,
    "discount_id"      BIGINT
);

CREATE TABLE "patient_location"
(
    "patient_id"  UUID NOT NULL,
    "location_id" UUID NOT NULL
);

CREATE TABLE "employee_role_location"
(
    "employee_id" UUID   NOT NULL,
    "role_id"     BIGINT NOT NULL,
    "location_id" UUID   NOT NULL
);

ALTER TABLE "patient_location"
    ADD PRIMARY KEY ("patient_id", "location_id");

ALTER TABLE "patient_location"
    ADD CONSTRAINT "patient_location_fk_patient"
        FOREIGN KEY ("patient_id") REFERENCES "patient" ("id");

ALTER TABLE "patient_location"
    ADD CONSTRAINT "patient_location_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "employee_role_location"
    ADD PRIMARY KEY ("employee_id", "role_id", "location_id");

ALTER TABLE "employee_role_location"
    ADD CONSTRAINT "employee_role_location_fk_employee"
        FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "employee_role_location"
    ADD CONSTRAINT "employee_role_location_fk_role"
        FOREIGN KEY ("role_id") REFERENCES "role" ("id");

ALTER TABLE "employee_role_location"
    ADD CONSTRAINT "employee_role_location_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "location"
    ADD CONSTRAINT "location_fk_clinic" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id");

ALTER TABLE "vaccination"
    ADD CONSTRAINT "vaccination_fk_patient"
        FOREIGN KEY ("patient_id") REFERENCES "patient" ("id");

ALTER TABLE "vaccination"
    ADD CONSTRAINT "vaccination_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "vaccination"
    ADD CONSTRAINT "vaccination_fk_employee"
        FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "discount"
    ADD CONSTRAINT "discount_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "note"
    ADD CONSTRAINT "note_fk_patient"
        FOREIGN KEY ("patient_id") REFERENCES "patient" ("id");

ALTER TABLE "note"
    ADD CONSTRAINT "note_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "note"
    ADD CONSTRAINT "note_fk_employee"
        FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "bill"
    ADD CONSTRAINT "bill_fk_patient"
        FOREIGN KEY ("patient_id") REFERENCES "patient" ("id");

ALTER TABLE "bill"
    ADD CONSTRAINT "bill_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "item"
    ADD CONSTRAINT "item_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "procedure"
    ADD CONSTRAINT "procedure_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "billed_item"
    ADD CONSTRAINT "billed_item_fk_bill"
        FOREIGN KEY ("bill_id") REFERENCES "bill" ("id");

ALTER TABLE "billed_item"
    ADD CONSTRAINT "billed_item_fk_employee"
        FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "billed_item"
    ADD CONSTRAINT "billed_item_fk_discount"
        FOREIGN KEY ("discount_id") REFERENCES "discount" ("id");

ALTER TABLE "billed_item"
    ADD CONSTRAINT "billed_item_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "billed_procedure"
    ADD CONSTRAINT "billed_procedure_fk_bill"
        FOREIGN KEY ("bill_id") REFERENCES "bill" ("id");

ALTER TABLE "billed_procedure"
    ADD CONSTRAINT "billed_procedure_fk_employee"
        FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "billed_procedure"
    ADD CONSTRAINT "billed_procedure_fk_discount"
        FOREIGN KEY ("discount_id") REFERENCES "discount" ("id");

ALTER TABLE "billed_procedure"
    ADD CONSTRAINT "billed_procedure_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

INSERT INTO "role" ("id", "name", "description")
VALUES (1, 'OWNER', 'Role for Pet Owners'),
       (2, 'VETERINARIAN', 'Role for Veterinarians'),
       (3, 'RECEPTIONIST', 'Role for Receptionist/Cashier/Registration'),
       (4, 'PEOPLE_MANAGER', 'Role for People/Human Resource Manager'),
       (5, 'CLINIC_MANAGER', 'Role for Clinic Managers - pricing, procedures, items and etc'),
       (6, 'ADMINISTRATOR', 'Role for Application Administrator');
