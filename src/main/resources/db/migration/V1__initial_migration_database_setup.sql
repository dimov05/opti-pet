CREATE TABLE "clinic"
(
    "id"                 UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "name"               VARCHAR(255)     NOT NULL UNIQUE,
    "owner_name"         VARCHAR(255)     NOT NULL,
    "owner_phone_number" VARCHAR(255)     NOT NULL,
    "is_active"          BOOLEAN          NOT NULL DEFAULT TRUE
);

CREATE TABLE "location"
(
    "id"                   UUID PRIMARY KEY    NOT NULL DEFAULT gen_random_uuid(),
    "clinic_id"            UUID                NOT NULL,
    "name"                 VARCHAR(255) UNIQUE NOT NULL,
    "city"                 VARCHAR(255)        NOT NULL,
    "address"              VARCHAR(255)        NOT NULL,
    "phone_number"         VARCHAR(255)        NOT NULL,
    "restrictions_enabled" BOOLEAN             NOT NULL DEFAULT FALSE,
    "latitude"             DOUBLE PRECISION,
    "longitude"            DOUBLE PRECISION,
    "is_active"            BOOLEAN             NOT NULL DEFAULT TRUE
);

CREATE TABLE "employee"
(
    "id"           UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "email"        VARCHAR(255)     NOT NULL UNIQUE,
    "password"     VARCHAR(255)     NOT NULL,
    "phone_number" VARCHAR(255)     NOT NULL,
    "display_name" VARCHAR(255)     NOT NULL,
    "job_title"    VARCHAR(255)     NOT NULL,
    "is_active"    BOOLEAN          NOT NULL DEFAULT TRUE
);

CREATE TABLE "role"
(
    "id"          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "name"        VARCHAR(255) UNIQUE                                 NOT NULL,
    "description" VARCHAR(255)
);

CREATE TABLE "owner"
(
    "id"           UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "display_name" VARCHAR(255)     NOT NULL,
    "email"        VARCHAR(255)     NOT NULL UNIQUE,
    "phone_number" VARCHAR(255)     NOT NULL,
    "home_address" VARCHAR(255),
    "bulstat"      VARCHAR(255),
    "notes"        TEXT,
    "is_active"    BOOLEAN          NOT NULL DEFAULT TRUE
);

CREATE TABLE "patient"
(
    "id"           UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
    "display_name" VARCHAR(255)     NOT NULL,
    "pet_type"     VARCHAR(255)     NOT NULL,
    "microchip"    VARCHAR(255) UNIQUE,
    "birthdate"    DATE             NOT NULL,
    "weight"       DECIMAL(5, 2) CHECK (weight >= 0),
    "is_deceased"  BOOLEAN          NOT NULL DEFAULT FALSE,
    "is_neutered"  BOOLEAN          NOT NULL DEFAULT FALSE,
    "note"         TEXT
);

CREATE TABLE "patient_location"
(
    "patient_id"  UUID NOT NULL,
    "location_id" UUID NOT NULL
);

CREATE TABLE "employee_role_location"
(
    "employee_id" UUID   NOT NULL,
    "role_id"     BIGINT NOT NULL,
    "location_id" UUID   NOT NULL
);
ALTER TABLE "patient_location"
    ADD PRIMARY KEY ("patient_id", "location_id");

ALTER TABLE "patient_location"
    ADD CONSTRAINT "patient_location_fk_patient"
        FOREIGN KEY ("patient_id") REFERENCES "patient" ("id");

ALTER TABLE "patient_location"
    ADD CONSTRAINT "patient_location_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "employee_role_location"
    ADD PRIMARY KEY ("employee_id", "role_id", "location_id");

ALTER TABLE "employee_role_location"
    ADD CONSTRAINT "employee_role_location_fk_employee"
        FOREIGN KEY ("employee_id") REFERENCES "employee" ("id");

ALTER TABLE "employee_role_location"
    ADD CONSTRAINT "employee_role_location_fk_role"
        FOREIGN KEY ("role_id") REFERENCES "role" ("id");

ALTER TABLE "employee_role_location"
    ADD CONSTRAINT "employee_role_location_fk_location"
        FOREIGN KEY ("location_id") REFERENCES "location" ("id");

ALTER TABLE "location"
    ADD CONSTRAINT "location_fk_clinic" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id");

INSERT INTO "role" ("id", "name", "description")
VALUES (1, 'OWNER', 'Role for Pet Owners'),
       (2, 'VETERINARIAN', 'Role for Veterinarians'),
       (3, 'RECEPTIONIST', 'Role for Receptionist/Cashier/Registration'),
       (4, 'PEOPLE_MANAGER', 'Role for People/Human Resource Manager'),
       (5, 'CLINIC_MANAGER', 'Role for Clinic Managers - pricing, procedures, items and etc'),
       (6, 'ADMINISTRATOR', 'Role for Application Administrator');
